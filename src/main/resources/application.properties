

################# spring app name

spring.application.name=queue manager

################# spring profiles


#profiles
spring.profiles.active=local,dev


################# server info

#context-path
#server.servlet.context-path=/

#port
server.port=8080
server.address=127.0.0.1





################# spring mvc


#jsp
spring.mvc.view.prefix=/WEB-INF/jsp/
spring.mvc.view.suffix=.jsp



################# spring template


#thymeleaf
#spring.thymeleaf.excluded-view-names





################# spring message   
# in jsp - ex. ${message}
application.message: Hello topas









################# spring actuator   

#actuator - http://localhost:9000/actuator/health
#management.server.address=localhost
#management.server.port=9000
#management.endpoints.web.exposure.include=*



################# spring admin
#http://localhost:8080/admin/
#spring.boot.admin.context-path=/admin
#spring.boot.admin.client.url=http://localhost:8080


################# spring jpa 
# jpa
spring.jpa.database=default
#spring.jpa.database=oracle
#spring.jpa.generate-ddl=true

spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true

#spring.jpa.open-in-view=true

#
#none : DB 초기화 관련 작업 수행하지 않음 -운영단계에서 ddl-auto값은 반드시 none이어야 한다
#create : 시작할 때 스키마를 지우고 다시 생성한다. classpath에서 import.sql 파일이 존재할 경우 파일에 정의된 쿼리를 수행한다.
#create-drop : 시작은 create와 동일하지만, 종료될 때 스키마를 삭제한다.
#update : 도메인 객체와 DB 스키마를 비교해서 DB를 업데이트한다.
#validate : 도메인 객체가 DB 스키마와 일치하는지 검사한다.
spring.jpa.hibernate.ddl-auto=update

#spring.data.jpa.repositories.bootstrap-mode=default
#logging.level.org.hibernate.SQL=debug
################# spring datasource 
 
# oracle
#spring.datasource.url=jdbc:oracle:thin:@localhost:1521:xe
spring.datasource.jdbc-url=jdbc:oracle:thin:@localhost:1521:xe
spring.datasource.username=ASYNC400
spring.datasource.password=ASYNC400
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver


### The SQL dialect makes Hibernate generate better SQL for the chosen database
#postgresql.spring.datasource.url=jdbc:mysql://localhost:5432/parking
postgresql.spring.datasource.jdbc-url=jdbc:mysql://localhost:5432/parking
postgresql.spring.datasource.username=parking
postgresql.spring.datasource.password=parking
postgresql.spring.datasource.driver-class-name=org.postgresql.Driver



## mysql
#mysql.spring.datasource.url=jdbc:mysql://localhost:3306/parking
mysql.spring.datasource.jdbc-url=jdbc:mysql://localhost:3306/parking
mysql.spring.datasource.username=parking
mysql.spring.datasource.password=parking
mysql.spring.datasource.driver-class-name=org.postgresql.Driver


## h2
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2-console
#h2.spring.datasource.jdbc-url=jdbc:h2:tcp://localhost/~/customer
#h2.spring.datasource.username=sa
#h2.spring.datasource.password=
#h2.spring.datasource.driver-class-name=org.h2.Driver





# logging file - spring.log
logging.path= c:/logs

#//For detailed logging during development
#logging.level.org.springframework=TRACE
#logging.level.com=TRACE
#logging.file= my.log
logging.level.web=DEBUG